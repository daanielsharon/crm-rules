services:
  scheduler:
    build:
      context: .
      dockerfile: scheduler/Dockerfile
    container_name: scheduler
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS_ADDR: ${REDIS_HOST}:${REDIS_PORT}
    networks:
      - app-network
    restart: always

  log-worker:
    build:
      context: .
      dockerfile: log-worker/Dockerfile
    container_name: log-worker
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS_ADDR: ${REDIS_HOST}:${REDIS_PORT}
    networks:
      - app-network
    restart: always

  rules-service:
    build:
      context: .
      dockerfile: rules-service/Dockerfile
    container_name: rules-service
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - app-network
    restart: always

  task-execution-worker:
    build:
      context: .
      dockerfile: task-execution-worker/Dockerfile
    container_name: task-execution-worker
    environment:
      REDIS_ADDR: ${REDIS_HOST}:${REDIS_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - app-network
    restart: always
  
  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    container_name: user-service
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - app-network
    restart: always
  
  log-service:
    build:
      context: .
      dockerfile: log-service/Dockerfile
    container_name: log-service
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - app-network
    restart: always 

  gateway-service:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    container_name: gateway-service
    environment:
      RULES_SERVICE_HOST: rules-service
      RULES_SERVICE_PORT: 8081
      USER_SERVICE_HOST: user-service
      USER_SERVICE_PORT: 8082
      LOG_SERVICE_HOST: log-service
      LOG_SERVICE_PORT: 8083
    networks:
      - app-network
    ports:
      - "8080:8080"
    restart: always

networks:
  app-network:
    driver: bridge
